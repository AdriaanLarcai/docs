# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload Pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./_site/
          name: github-pages
          retention-days: 1
#      - name: Upload artifact
#        uses: actions/upload-pages-artifact@v1
      - name: Archive artifact
        shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
        run: |
          tar \
            --dereference --hard-dereference \
            --directory "$INPUT_PATH" \
            -cvf "/home/runner/work/_temp/artifact.tar" \
            .
        env:
          #GITHUB_PAGES: true
          INPUT_PATH: ./_site/
      - name: Add .gitbook to existing tar
        shell: /usr/bin/bash --noprofile --norc -e -o pipefail {0}
        run: |
          tar \
            --dereference --hard-dereference \
            -rf "/home/runner/work/_temp/artifact.tar" \
            ./.gitbook/
        env:
            #GITHUB_PAGES: true
            INPUT_PATH: ./_site/
      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: github-pages
          path: ${{ runner.temp }}/artifact.tar
          retention-days: 1
          if-no-files-found: warn
          overwrite: true
        env:
          GITHUB_PAGES: true

  # Deployment job
  deploy:
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
